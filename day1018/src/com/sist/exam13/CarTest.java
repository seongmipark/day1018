package com.sist.exam13;

public class CarTest {

	public static void main(String[] args) {
		/*Car c = new Car();
		c.speedDown(80);
		c.speedUp(60);
		c.printSpeed();
		c.turnLeft();
		c.turnRight();*/
		
		Movable m = new Car();
		//인터페이스도 클래스와 마찬가지로 자료형의 개념이다.
		//인터페이스 인퍼테이스를 구현한 클래스사이에는 클래스와 마찬가지로
		//상속관계에 있게된다.
		//따라서 상위인터페이스의 참조 변수가 자식클래스객체를 잠조할 수 있다. 
		 
		m.speedUp(20);
		//상속관계에 있는 부모의 참조변수가 자식클래스의 객체를 참조할 때에
		//부모클래스에 원래부터 있던 메소드를 호출할 수 있고
		//자식 클래스에서 오버라이딩한 메소드가 동작합니다. 
		 
		//m.turnLeft();불가능
		((Car)m).turnLeft(); 
		//상속관계에 있는 부모의 참조변수가 자식클래스의 객체를 참조할 때에
		//자식클래스에 새롭게 추가된 메소드를 호출할 수 없다.
		//호출하려면 해당하는 자식클래스로 형변환하여 호출할 수 있다.
		
		
		
		// Car c = m; 불가능
		
		//Car c = (Car)m;//서로상속관계라면 가능
		//상속관계에 있는 부모의 참조변수가 자식클래스의 객체를 참조하고 있다면
		//해당자식클래스의 형으로 변환하여 자식클래스의 참조변수에 대입할 수 있다
		
		Car c = new Car(); //가능
		
		Movable m2 = c; //가능
		//상속관계에 있을 때 부모의 참조변수가 자식클래스의 객체를 잠조할 수 있다
		
		Movable m3 = (Movable)c; //가능
		//상속관계에 있을 때 자식클래스의 객체를 부모의 자료형으로 
		//형변환 할 수 있다.
	}
}
